{"version":3,"sources":["components/Header.js","components/HandleError.js","components/ModalTable.js","components/DatePickerInput.js","components/UserDetails.js","components/UserTable.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","apppBar","backgroundColor","menuButton","marginRight","spacing","title","fontFamily","Header","classes","className","AppBar","position","Toolbar","Typography","variant","Button","color","HandleError","style","display","flexDirection","alignItems","justifyContent","tableHead","fontSize","fontWeight","ModalTable","props","filterData","map","data","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","key","id","scope","start_time","split","end_time","DatePickerInput","selectedDate","handleDateChange","utils","DateFnsUtils","disableToolbar","format","margin","label","value","onChange","date","KeyboardButtonProps","paper","width","palette","background","border","boxShadow","shadows","padding","UserDetails","modalInfo","show","handleClose","useState","Date","setSelectedDate","activity_periods","length","filter","activity","formatDate","getMonth","getDate","getFullYear","toString","setFilterData","body","real_name","console","log","Modal","open","onClose","aria-labelledby","aria-describedby","table","minWidth","UserTable","items","setItems","setModalInfo","setShowModal","setShow","handleShow","useEffect","a","axios","result","members","fetchItems","toggleTrueFalse","row","onClick","event","userId","user","item","handleClick","tz","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6949cf6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  apppBar: {\r\n    backgroundColor: \"#1f4287\",\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    fontFamily: \"Rowdies, cursive\",\r\n  },\r\n}));\r\n\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" className={classes.apppBar}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Activity Logs\r\n          </Typography>\r\n          <Button color=\"inherit\" className={classes.menuButton}>\r\n            ADMIN\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst HandleError = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-around\",\r\n      }}\r\n    >\r\n      <h3>Uh oh!</h3>\r\n      <h4>No Activity Logged by user on Selected Date.</h4>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HandleError;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  tableHead: {\r\n    fontSize: \"15px\",\r\n    fontWeight: 500,\r\n    fontFamily: \"Rowdies, cursive\",\r\n  },\r\n}));\r\n\r\nconst ModalTable = (props) => {\r\n  const { filterData } = props;\r\n  const classes = useStyles();\r\n\r\n  return filterData.map((data) => (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\" className={classes.tableHead}>\r\n              Start Time\r\n            </TableCell>\r\n            <TableCell align=\"center\" className={classes.tableHead}>\r\n              End Time\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          <TableRow key={data.id}>\r\n            <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n              {data.start_time.split(\" \")[1]}\r\n            </TableCell>\r\n            <TableCell align=\"center\">{data.end_time.split(\" \")[1]}</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  ));\r\n};\r\n\r\nexport default ModalTable;\r\n","import React from \"react\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nconst DatePickerInput = (props) => {\r\n  const { selectedDate, handleDateChange } = props;\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <KeyboardDatePicker\r\n        disableToolbar\r\n        variant=\"inline\"\r\n        format=\"MM/dd/yyyy\"\r\n        margin=\"normal\"\r\n        id=\"date-picker-inline\"\r\n        label=\"Activity Logs\"\r\n        value={selectedDate}\r\n        onChange={(date) => handleDateChange(date)}\r\n        KeyboardButtonProps={{\r\n          \"aria-label\": \"change date\",\r\n        }}\r\n      />\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n};\r\n\r\nexport default DatePickerInput;\r\n","import \"date-fns\";\r\nimport React, { useState } from \"react\";\r\nimport { Modal, makeStyles } from \"@material-ui/core\";\r\nimport HandleError from \"./HandleError\";\r\nimport ModalTable from \"./ModalTable\";\r\nimport DatePickerInput from \"./DatePickerInput\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    width: 450,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    margin: \"10vh auto\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nconst UserDetails = (props) => {\r\n  const classes = useStyles();\r\n  const { modalInfo, show, handleClose } = props;\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [filterData, setFilterData] = useState(\r\n    modalInfo.activity_periods && modalInfo.activity_periods.length !== 0\r\n      ? modalInfo.activity_periods.filter((activity) => {\r\n          const formatDate = `${\r\n            selectedDate.getMonth() + 1\r\n          }/${selectedDate.getDate()}/${selectedDate.getFullYear()}`;\r\n          return activity.start_time.split(\" \")[0].toString() == formatDate;\r\n        })\r\n      : []\r\n  );\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    setFilterData(\r\n      modalInfo.activity_periods && modalInfo.activity_periods.length !== 0\r\n        ? modalInfo.activity_periods.filter((activity) => {\r\n            const formatDate = `${\r\n              date.getMonth() + 1\r\n            }/${date.getDate()}/${date.getFullYear()}`;\r\n            console.log(\r\n              activity.start_time.split(\" \")[0].toString() == formatDate,\r\n              activity.start_time.split(\" \")[0].toString(),\r\n              formatDate\r\n            );\r\n            return activity.start_time.split(\" \")[0].toString() == formatDate;\r\n          })\r\n        : []\r\n    );\r\n  };\r\n\r\n  const body = (\r\n    <div className={classes.paper}>\r\n      <h2 align=\"center\" id=\"simple-modal-title\">\r\n        {modalInfo.real_name}\r\n      </h2>\r\n      <DatePickerInput\r\n        selectedDate={selectedDate}\r\n        handleDateChange={handleDateChange}\r\n      />\r\n      <div id=\"simple-modal-description\">\r\n        {modalInfo.activity_periods && filterData.length !== 0 ? (\r\n          <ModalTable filterData={filterData} />\r\n        ) : (\r\n          <HandleError />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      open={show}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n    >\r\n      {body}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default UserDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from \"axios\";\r\nimport UserDetails from \"./UserDetails\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  tableHead: {\r\n    fontSize: \"20px\",\r\n    fontWeight: 500,\r\n    fontFamily: \"Rowdies, cursive\",\r\n  },\r\n}));\r\n\r\nconst UserTable = () => {\r\n  const classes = useStyles();\r\n  const [items, setItems] = useState([]);\r\n\r\n  const [modalInfo, setModalInfo] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  useEffect(() => {\r\n    const fetchItems = async () => {\r\n      const result = await axios(\r\n        `https://my-json-server.typicode.com/unnati24/mock-api/db`\r\n      );\r\n      setItems(result.data.members);\r\n    };\r\n\r\n    fetchItems();\r\n  }, []);\r\n\r\n  const handleClick = (event, userId) => {\r\n    const user = items.filter((item) => item.id == userId);\r\n    setModalInfo(user[0]);\r\n    toggleTrueFalse();\r\n  };\r\n\r\n  const toggleTrueFalse = () => {\r\n    setShowModal(handleShow);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"center\" className={classes.tableHead}>\r\n                User Id\r\n              </TableCell>\r\n              <TableCell align=\"center\" className={classes.tableHead}>\r\n                Name\r\n              </TableCell>\r\n              <TableCell align=\"center\" className={classes.tableHead}>\r\n                Location\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {items.map((row) => (\r\n              <TableRow\r\n                key={row.id}\r\n                onClick={(event) => handleClick(event, row.id)}\r\n              >\r\n                <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                  {row.id}\r\n                </TableCell>\r\n                <TableCell align=\"center\">{row.real_name}</TableCell>\r\n                <TableCell align=\"center\">{row.tz}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <UserDetails\r\n        modalInfo={modalInfo}\r\n        show={show}\r\n        handleClose={handleClose}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserTable;\r\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport UserTable from \"./components/UserTable\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <UserTable />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}